#ifndef MYOBJECT_H
#define MYOBJECT_H

#include <node.h>
#include "util_pipeline.h"

class MyPipeline: public UtilPipeline {

public:

   MyPipeline(void):UtilPipeline() {
       EnableGesture();
       nframes=0;
   }

   virtual void PXCAPI OnGesture(PXCGesture::Gesture *data) {
	   nframes = 0;
       label = data->label; 
   }

   virtual bool OnNewFrame() {
       return (nframes++<5000);
   }
   
   double getVal () { return label; }
   
protected:
   int nframes;
   double label;
};

class MyObject : public node::ObjectWrap {
 public:
  static void Init(v8::Handle<v8::Object> exports);

 private:
  MyObject();
  ~MyObject();

  static v8::Handle<v8::Value> New(const v8::Arguments& args);
  static v8::Handle<v8::Value> OnGesture(const v8::Arguments& args);
  MyPipeline pipeline;
};

#endif